import { useState } from 'react';
// import { useNavigate } from 'react-router-dom';
// import { useStoryContext } from '../context/StoryContext';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { 
  Sparkles, 
  Download, 
  Copy, 
  CheckCircle, 
  RefreshCw, 
  ArrowLeft,
  BookOpen,
  Target,
  Heart,
  Star
} from 'lucide-react';

const StoryResults = () => {
  // const navigate = useNavigate();
  // const { 
  //   essayIdeas, 
  //   profileData, 
  //   questionResponses,
  //   generateEssayIdeas 
  // } = useStoryContext();

  // Mock data for demonstration
  const essayIdeas = `Essay Idea #1: The Debugging Mindset
Topic/Theme: How learning to debug code taught me persistence and systematic problem-solving
Specific Story: Focus on that one night when you spent 4 hours tracking down a single semicolon error in your first major coding project
Key Message: This experience taught you that every complex problem can be broken down into smaller, manageable pieces
Why It Showcases Your Qualities: Demonstrates analytical thinking, persistence, and intellectual curiosity
Best For: Computer Science programs, especially at MIT, Stanford, and UC Berkeley

Essay Idea #2: The Bridge Builder
Topic/Theme: Using technology to bridge generational gaps during COVID-19
Specific Story: Teaching your elderly neighbor to use video calling technology to reconnect with family
Key Message: Technology isn't just about innovationâ€”it's about human connection and empathy
Why It Showcases Your Qualities: Shows emotional intelligence, service orientation, and practical application of technical skills
Best For: Schools that value community service and human-centered technology like Stanford and Harvard

Essay Idea #3: From Silent to Speaker
Topic/Theme: Overcoming language barriers to find your voice in a new country
Specific Story: Your journey from being too embarrassed to speak in class to joining the math club and eventually leading presentations
Key Message: Sometimes our biggest challenges become our greatest strengths when we find the right environment to grow
Why It Showcases Your Qualities: Resilience, adaptability, and leadership development
Best For: Schools that value diversity and perseverance like Columbia, NYU, and UPenn`;
  
  const profileData = {
    colleges: ['Harvard', 'Stanford', 'MIT', 'Yale'],
    major: 'Computer Science'
  };
  
  const questionResponses = ['Response 1', 'Response 2', 'Response 3'];

  const [copiedIndex, setCopiedIndex] = useState<number | null>(null);
  const [isRegenerating, setIsRegenerating] = useState(false);

  const navigate = (path: string) => {
    console.log(`Would navigate to: ${path}`);
  };

  const generateEssayIdeas = async () => {
    console.log('Would regenerate essay ideas');
  };

  // Parse essay ideas into structured format
  const parseEssayIdeas = (text: string) => {
    if (!text) return [];

    // Split by common essay idea separators and clean up
    const sections = text.split(/(?=Essay Idea #?\d+|Idea #?\d+|\d+\.|##)/i)
      .filter(section => section.trim().length > 20);

    return sections.map((section, index) => {
      const lines = section.split('\n').filter(line => line.trim());
      
      // Extract title (usually the first meaningful line)
      const titleLine = lines.find(line => 
        line.includes('Essay Idea') || 
        line.includes('Idea') || 
        /^\d+\./.test(line) ||
        line.includes('Topic') ||
        line.includes('Theme')
      ) || lines[0];
      
      const title = titleLine
        .replace(/Essay Idea #?\d+:?/i, '')
        .replace(/Idea #?\d+:?/i, '')
        .replace(/^\d+\./, '')
        .replace(/Topic:?/i, '')
        .replace(/Theme:?/i, '')
        .replace(/##/g, '')
        .trim();

      return {
        id: index + 1,
        title: title || `Essay Idea ${index + 1}`,
        content: section.trim()
      };
    });
  };

  const essayIdeasArray = parseEssayIdeas(essayIdeas);

  const copyToClipboard = async (text: string, index: number) => {
    try {
      await navigator.clipboard.writeText(text);
      setCopiedIndex(index);
      setTimeout(() => setCopiedIndex(null), 2000);
    } catch (err) {
      console.error('Failed to copy text: ', err);
    }
  };

  const downloadAsText = () => {
    const content = `COLLEGE ESSAY IDEAS\nGenerated by StoryStart\n\n${essayIdeas}`;
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'my-essay-ideas.txt';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const handleRegenerate = async () => {
    setIsRegenerating(true);
    try {
      await generateEssayIdeas();
    } catch (error) {
      console.error('Error regenerating ideas:', error);
    } finally {
      setIsRegenerating(false);
    }
  };

  const getAnsweredQuestionsCount = () => {
    return questionResponses.filter(response => response.trim().length > 0).length;
  };

  if (!essayIdeas) {
    return (
      <div className="container mx-auto px-4 py-8 max-w-4xl">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-purple-600 mx-auto mb-4"></div>
          <p className="text-gray-600">Your essay ideas are being generated...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-8 max-w-6xl">
      {/* Header */}
      <div className="text-center mb-12">
        <div className="flex items-center justify-center gap-2 mb-4">
          <div className="w-12 h-12 bg-gradient-to-r from-purple-600 to-blue-600 rounded-xl flex items-center justify-center">
            <Sparkles className="w-7 h-7 text-white" />
          </div>
          <h1 className="text-4xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent">
            Your Essay Ideas
          </h1>
        </div>
        <p className="text-xl text-gray-600 mb-4">
          Personalized essay concepts based on your unique story
        </p>
        
        {/* Summary Stats */}
        <div className="flex items-center justify-center gap-6 text-sm text-gray-500 mb-6">
          <div className="flex items-center gap-1">
            <Target className="w-4 h-4" />
            {profileData.colleges.length} target colleges
          </div>
          <div className="flex items-center gap-1">
            <BookOpen className="w-4 h-4" />
            {getAnsweredQuestionsCount()} reflections analyzed
          </div>
          <div className="flex items-center gap-1">
            <Heart className="w-4 h-4" />
            {essayIdeasArray.length} unique ideas generated
          </div>
        </div>

        {/* Action Buttons */}
        <div className="flex items-center justify-center gap-4">
          <Button
            onClick={downloadAsText}
            variant="outline"
            className="flex items-center gap-2"
          >
            <Download className="w-4 h-4" />
            Download Ideas
          </Button>
          <Button
            onClick={handleRegenerate}
            disabled={isRegenerating}
            variant="outline"
            className="flex items-center gap-2"
          >
            {isRegenerating ? (
              <>
                <RefreshCw className="w-4 h-4 animate-spin" />
                Regenerating...
              </>
            ) : (
              <>
                <RefreshCw className="w-4 h-4" />
                Generate New Ideas
              </>
            )}
          </Button>
        </div>
      </div>

      {/* Target Colleges Reminder */}
      <Card className="p-6 mb-8 bg-gradient-to-r from-purple-50 to-blue-50 border-0">
        <div className="text-center">
          <h3 className="font-semibold text-gray-800 mb-2">Your Target Colleges</h3>
          <div className="flex flex-wrap justify-center gap-2">
            {profileData.colleges.map(college => (
              <Badge key={college} variant="secondary" className="bg-white/80">
                {college}
              </Badge>
            ))}
          </div>
          <p className="text-sm text-gray-600 mt-3">
            These essay ideas are tailored to appeal to your target schools and {profileData.major} major.
          </p>
        </div>
      </Card>

      {/* Essay Ideas */}
      <div className="space-y-8">
        {essayIdeasArray.length > 0 ? (
          essayIdeasArray.map((idea, index) => (
            <Card key={idea.id} className="p-8 bg-white/90 backdrop-blur-sm border-0 shadow-lg hover:shadow-xl transition-all">
              <div className="flex items-start justify-between mb-6">
                <div className="flex items-start gap-4">
                  <div className="w-10 h-10 bg-gradient-to-r from-purple-600 to-blue-600 rounded-full flex items-center justify-center text-white font-bold">
                    {idea.id}
                  </div>
                  <div>
                    <h2 className="text-2xl font-bold text-gray-800 mb-2">
                      {idea.title}
                    </h2>
                    <div className="flex items-center gap-2">
                      <Star className="w-4 h-4 text-yellow-500" />
                      <span className="text-sm font-medium text-gray-600">Personalized for you</span>
                    </div>
                  </div>
                </div>
                
                <Button
                  onClick={() => copyToClipboard(idea.content, index)}
                  variant="ghost"
                  size="sm"
                  className="flex items-center gap-2"
                >
                  {copiedIndex === index ? (
                    <>
                      <CheckCircle className="w-4 h-4 text-green-600" />
                      <span className="text-green-600">Copied!</span>
                    </>
                  ) : (
                    <>
                      <Copy className="w-4 h-4" />
                      Copy
                    </>
                  )}
                </Button>
              </div>

              <div className="prose prose-gray max-w-none">
                <div className="whitespace-pre-wrap text-gray-700 leading-relaxed">
                  {idea.content}
                </div>
              </div>
            </Card>
          ))
        ) : (
          // Fallback: Display raw content if parsing fails
          <Card className="p-8 bg-white/90 backdrop-blur-sm border-0 shadow-lg">
            <div className="flex items-start justify-between mb-6">
              <h2 className="text-2xl font-bold text-gray-800">Your Essay Ideas</h2>
              <Button
                onClick={() => copyToClipboard(essayIdeas, 0)}
                variant="ghost"
                size="sm"
                className="flex items-center gap-2"
              >
                {copiedIndex === 0 ? (
                  <>
                    <CheckCircle className="w-4 h-4 text-green-600" />
                    <span className="text-green-600">Copied!</span>
                  </>
                ) : (
                  <>
                    <Copy className="w-4 h-4" />
                    Copy All
                  </>
                )}
              </Button>
            </div>
            
            <div className="prose prose-gray max-w-none">
              <div className="whitespace-pre-wrap text-gray-700 leading-relaxed">
                {essayIdeas}
              </div>
            </div>
          </Card>
        )}
      </div>

      {/* Next Steps */}
      <Card className="p-8 mt-12 bg-gradient-to-r from-green-50 to-emerald-50 border-0 shadow-lg">
        <div className="text-center">
          <CheckCircle className="w-16 h-16 text-green-600 mx-auto mb-4" />
          <h3 className="text-2xl font-bold text-gray-800 mb-4">
            What's Next?
          </h3>
          <div className="grid md:grid-cols-3 gap-6 text-left">
            <div className="space-y-2">
              <h4 className="font-semibold text-gray-800">1. Choose Your Favorite</h4>
              <p className="text-sm text-gray-600">
                Review each idea and pick the one that resonates most with you and showcases your unique story.
              </p>
            </div>
            <div className="space-y-2">
              <h4 className="font-semibold text-gray-800">2. Start Writing</h4>
              <p className="text-sm text-gray-600">
                Use the detailed guidance provided to craft your first draft. Focus on specific moments and emotions.
              </p>
            </div>
            <div className="space-y-2">
              <h4 className="font-semibold text-gray-800">3. Get Feedback</h4>
              <p className="text-sm text-gray-600">
                Share your draft with teachers, counselors, or trusted mentors for feedback and refinement.
              </p>
            </div>
          </div>
        </div>
      </Card>

      {/* Navigation */}
      <div className="flex items-center justify-between mt-12">
        <Button
          onClick={() => navigate('/discovery')}
          variant="outline"
          className="flex items-center gap-2"
        >
          <ArrowLeft className="w-4 h-4" />
          Back to Questions
        </Button>

        <Button
          onClick={() => navigate('/')}
          variant="outline"
        >
          Start Over
        </Button>
      </div>

      {/* Footer Message */}
      <div className="text-center mt-8 p-6 bg-gray-50 rounded-lg">
        <p className="text-gray-600 text-sm">
          <strong>Remember:</strong> These are starting points for your essays. The best college essays come from your authentic voice and genuine experiences. Use these ideas as inspiration, but make sure your final essays truly represent who you are.
        </p>
      </div>
    </div>
  );
};

export default StoryResults;